{
	"info": {
		"_postman_id": "book-scraper-api-collection",
		"name": "Book Scraper API",
		"description": "Complete API collection for the Book Scraper project with all endpoints and examples",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"health"
					]
				},
				"description": "Health check endpoint - no authentication required"
			},
			"response": []
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "Get All Books",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							]
						},
						"description": "Get all books with default pagination"
					},
					"response": []
				},
				{
					"name": "Get Books with Pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?page=1&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Get books with custom pagination"
					},
					"response": []
				},
				{
					"name": "Get Books by Category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?category=Fiction",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "category",
									"value": "Fiction"
								}
							]
						},
						"description": "Filter books by category"
					},
					"response": []
				},
				{
					"name": "Get Books by Price Range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?min_price=10&max_price=50",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "min_price",
									"value": "10"
								},
								{
									"key": "max_price",
									"value": "50"
								}
							]
						},
						"description": "Filter books by price range"
					},
					"response": []
				},
				{
					"name": "Get Books by Availability",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?availability=In stock",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "availability",
									"value": "In stock"
								}
							]
						},
						"description": "Filter books by availability status"
					},
					"response": []
				},
				{
					"name": "Get Books Sorted by Price (Desc)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?sort_by=price_including_tax&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "price_including_tax"
								},
								{
									"key": "sort_order",
									"value": "desc"
								}
							]
						},
						"description": "Sort books by price in descending order"
					},
					"response": []
				},
				{
					"name": "Get Books Sorted by Rating (Asc)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?sort_by=rating&sort_order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "rating"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Sort books by rating in ascending order"
					},
					"response": []
				},
				{
					"name": "Get Books Sorted by Crawl Time (Newest)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?sort_by=crawl_timestamp&sort_order=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "crawl_timestamp"
								},
								{
									"key": "sort_order",
									"value": "desc"
								}
							]
						},
						"description": "Sort books by crawl timestamp (newest first)"
					},
					"response": []
				},
				{
					"name": "Get Books - Combined Filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?category=Fiction&max_price=30&sort_by=price_including_tax&sort_order=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "category",
									"value": "Fiction"
								},
								{
									"key": "max_price",
									"value": "30"
								},
								{
									"key": "sort_by",
									"value": "price_including_tax"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Combined filters: Fiction books under $30, sorted by price"
					},
					"response": []
				},
				{
					"name": "Get Book by UPC",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books/{{book_upc}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books",
								"{{book_upc}}"
							]
						},
						"description": "Get a specific book by its UPC"
					},
					"response": []
				}
			],
			"description": "Book-related API endpoints"
		},
		{
			"name": "Changes",
			"item": [
				{
					"name": "Get All Changes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/changes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"changes"
							]
						},
						"description": "Get all change logs with default pagination"
					},
					"response": []
				},
				{
					"name": "Get Changes with Pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/changes?page=1&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"changes"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						},
						"description": "Get change logs with custom pagination"
					},
					"response": []
				},
				{
					"name": "Get Changes by Type - New",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/changes?change_type=new",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"changes"
							],
							"query": [
								{
									"key": "change_type",
									"value": "new"
								}
							]
						},
						"description": "Filter changes by type: new books"
					},
					"response": []
				},
				{
					"name": "Get Changes by Type - Updated",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/changes?change_type=updated",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"changes"
							],
							"query": [
								{
									"key": "change_type",
									"value": "updated"
								}
							]
						},
						"description": "Filter changes by type: updated books"
					},
					"response": []
				},
				{
					"name": "Get Changes by Type - Removed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/changes?change_type=removed",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"changes"
							],
							"query": [
								{
									"key": "change_type",
									"value": "removed"
								}
							]
						},
						"description": "Filter changes by type: removed books"
					},
					"response": []
				},
				{
					"name": "Get Changes by Book ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/changes?book_id={{book_upc}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"changes"
							],
							"query": [
								{
									"key": "book_id",
									"value": "{{book_upc}}"
								}
							]
						},
						"description": "Get changes for a specific book"
					},
					"response": []
				},
				{
					"name": "Get Changes - Combined Filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/changes?change_type=updated&book_id={{book_upc}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"changes"
							],
							"query": [
								{
									"key": "change_type",
									"value": "updated"
								},
								{
									"key": "book_id",
									"value": "{{book_upc}}"
								}
							]
						},
						"description": "Combined filters: updated changes for a specific book"
					},
					"response": []
				}
			],
			"description": "Change log API endpoints"
		},
		{
			"name": "Error Testing",
			"item": [
				{
					"name": "Test Without API Key",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							]
						},
						"description": "Test without API key (should return 403)"
					},
					"response": []
				},
				{
					"name": "Test Invalid API Key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid-api-key",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							]
						},
						"description": "Test with invalid API key (should return 403)"
					},
					"response": []
				},
				{
					"name": "Test Non-existent Book",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books/nonexistent-upc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books",
								"nonexistent-upc"
							]
						},
						"description": "Test non-existent book (should return 404)"
					},
					"response": []
				},
				{
					"name": "Test Invalid Pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?page=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								}
							]
						},
						"description": "Test invalid pagination (should return 422)"
					},
					"response": []
				},
				{
					"name": "Test Invalid Per Page",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/books?per_page=200",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"books"
							],
							"query": [
								{
									"key": "per_page",
									"value": "200"
								}
							]
						},
						"description": "Test invalid per_page (should return 422)"
					},
					"response": []
				}
			],
			"description": "Error testing endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "api_key",
			"value": "default-api-key",
			"type": "string"
		},
		{
			"key": "book_upc",
			"value": "123456789",
			"type": "string"
		}
	]
}
